// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DefaultDecayPeriodVoteUpdate extends ethereum.Event {
  get params(): DefaultDecayPeriodVoteUpdate__Params {
    return new DefaultDecayPeriodVoteUpdate__Params(this);
  }
}

export class DefaultDecayPeriodVoteUpdate__Params {
  _event: DefaultDecayPeriodVoteUpdate;

  constructor(event: DefaultDecayPeriodVoteUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get decayPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isDefault(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DefaultFeeVoteUpdate extends ethereum.Event {
  get params(): DefaultFeeVoteUpdate__Params {
    return new DefaultFeeVoteUpdate__Params(this);
  }
}

export class DefaultFeeVoteUpdate__Params {
  _event: DefaultFeeVoteUpdate;

  constructor(event: DefaultFeeVoteUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isDefault(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DefaultSlippageFeeVoteUpdate extends ethereum.Event {
  get params(): DefaultSlippageFeeVoteUpdate__Params {
    return new DefaultSlippageFeeVoteUpdate__Params(this);
  }
}

export class DefaultSlippageFeeVoteUpdate__Params {
  _event: DefaultSlippageFeeVoteUpdate;

  constructor(event: DefaultSlippageFeeVoteUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get slippageFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isDefault(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Deployed extends ethereum.Event {
  get params(): Deployed__Params {
    return new Deployed__Params(this);
  }
}

export class Deployed__Params {
  _event: Deployed;

  constructor(event: Deployed) {
    this._event = event;
  }

  get mooniswap(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token2(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class GovernanceFeeReceiverUpdate extends ethereum.Event {
  get params(): GovernanceFeeReceiverUpdate__Params {
    return new GovernanceFeeReceiverUpdate__Params(this);
  }
}

export class GovernanceFeeReceiverUpdate__Params {
  _event: GovernanceFeeReceiverUpdate;

  constructor(event: GovernanceFeeReceiverUpdate) {
    this._event = event;
  }

  get governanceFeeReceiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GovernanceShareVoteUpdate extends ethereum.Event {
  get params(): GovernanceShareVoteUpdate__Params {
    return new GovernanceShareVoteUpdate__Params(this);
  }
}

export class GovernanceShareVoteUpdate__Params {
  _event: GovernanceShareVoteUpdate;

  constructor(event: GovernanceShareVoteUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get governanceShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isDefault(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReferralFeeReceiverUpdate extends ethereum.Event {
  get params(): ReferralFeeReceiverUpdate__Params {
    return new ReferralFeeReceiverUpdate__Params(this);
  }
}

export class ReferralFeeReceiverUpdate__Params {
  _event: ReferralFeeReceiverUpdate;

  constructor(event: ReferralFeeReceiverUpdate) {
    this._event = event;
  }

  get referralFeeReceiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReferralShareVoteUpdate extends ethereum.Event {
  get params(): ReferralShareVoteUpdate__Params {
    return new ReferralShareVoteUpdate__Params(this);
  }
}

export class ReferralShareVoteUpdate__Params {
  _event: ReferralShareVoteUpdate;

  constructor(event: ReferralShareVoteUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referralShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isDefault(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MooniswapFactory__defaultsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory__shareParametersResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }
}

export class MooniswapFactory__sortTokensResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class MooniswapFactory__virtualDefaultDecayPeriodResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory__virtualDefaultFeeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory__virtualDefaultSlippageFeeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory__virtualGovernanceShareResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory__virtualReferralShareResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class MooniswapFactory extends ethereum.SmartContract {
  static bind(address: Address): MooniswapFactory {
    return new MooniswapFactory("MooniswapFactory", address);
  }

  allPools(param0: BigInt): Address {
    let result = super.call("allPools", "allPools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_allPools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("allPools", "allPools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultDecayPeriod(): BigInt {
    let result = super.call(
      "defaultDecayPeriod",
      "defaultDecayPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultDecayPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultDecayPeriod",
      "defaultDecayPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultDecayPeriodVotes(user: Address): BigInt {
    let result = super.call(
      "defaultDecayPeriodVotes",
      "defaultDecayPeriodVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_defaultDecayPeriodVotes(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultDecayPeriodVotes",
      "defaultDecayPeriodVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultFee(): BigInt {
    let result = super.call("defaultFee", "defaultFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_defaultFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("defaultFee", "defaultFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultFeeVotes(user: Address): BigInt {
    let result = super.call(
      "defaultFeeVotes",
      "defaultFeeVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_defaultFeeVotes(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultFeeVotes",
      "defaultFeeVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultSlippageFee(): BigInt {
    let result = super.call(
      "defaultSlippageFee",
      "defaultSlippageFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultSlippageFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultSlippageFee",
      "defaultSlippageFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultSlippageFeeVotes(user: Address): BigInt {
    let result = super.call(
      "defaultSlippageFeeVotes",
      "defaultSlippageFeeVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_defaultSlippageFeeVotes(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultSlippageFeeVotes",
      "defaultSlippageFeeVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaults(): MooniswapFactory__defaultsResult {
    let result = super.call(
      "defaults",
      "defaults():(uint256,uint256,uint256)",
      []
    );

    return new MooniswapFactory__defaultsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_defaults(): ethereum.CallResult<MooniswapFactory__defaultsResult> {
    let result = super.tryCall(
      "defaults",
      "defaults():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__defaultsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  deploy(tokenA: Address, tokenB: Address): Address {
    let result = super.call("deploy", "deploy(address,address):(address)", [
      ethereum.Value.fromAddress(tokenA),
      ethereum.Value.fromAddress(tokenB)
    ]);

    return result[0].toAddress();
  }

  try_deploy(tokenA: Address, tokenB: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("deploy", "deploy(address,address):(address)", [
      ethereum.Value.fromAddress(tokenA),
      ethereum.Value.fromAddress(tokenB)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllPools(): Array<Address> {
    let result = super.call("getAllPools", "getAllPools():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAllPools(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getAllPools", "getAllPools():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  governanceFeeReceiver(): Address {
    let result = super.call(
      "governanceFeeReceiver",
      "governanceFeeReceiver():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governanceFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governanceFeeReceiver",
      "governanceFeeReceiver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governanceShare(): BigInt {
    let result = super.call(
      "governanceShare",
      "governanceShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_governanceShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "governanceShare",
      "governanceShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governanceShareVotes(user: Address): BigInt {
    let result = super.call(
      "governanceShareVotes",
      "governanceShareVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_governanceShareVotes(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "governanceShareVotes",
      "governanceShareVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isActive(): boolean {
    let result = super.call("isActive", "isActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isActive", "isActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFeeReceiver(param0: Address): boolean {
    let result = super.call("isFeeReceiver", "isFeeReceiver(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isFeeReceiver(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFeeReceiver",
      "isFeeReceiver(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPool(param0: Address): boolean {
    let result = super.call("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isPool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mooniswapDeployer(): Address {
    let result = super.call(
      "mooniswapDeployer",
      "mooniswapDeployer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_mooniswapDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mooniswapDeployer",
      "mooniswapDeployer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mothership(): Address {
    let result = super.call("mothership", "mothership():(address)", []);

    return result[0].toAddress();
  }

  try_mothership(): ethereum.CallResult<Address> {
    let result = super.tryCall("mothership", "mothership():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolOwner(): Address {
    let result = super.call("poolOwner", "poolOwner():(address)", []);

    return result[0].toAddress();
  }

  try_poolOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolOwner", "poolOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pools(tokenA: Address, tokenB: Address): Address {
    let result = super.call("pools", "pools(address,address):(address)", [
      ethereum.Value.fromAddress(tokenA),
      ethereum.Value.fromAddress(tokenB)
    ]);

    return result[0].toAddress();
  }

  try_pools(tokenA: Address, tokenB: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("pools", "pools(address,address):(address)", [
      ethereum.Value.fromAddress(tokenA),
      ethereum.Value.fromAddress(tokenB)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referralFeeReceiver(): Address {
    let result = super.call(
      "referralFeeReceiver",
      "referralFeeReceiver():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_referralFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "referralFeeReceiver",
      "referralFeeReceiver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referralShare(): BigInt {
    let result = super.call("referralShare", "referralShare():(uint256)", []);

    return result[0].toBigInt();
  }

  try_referralShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralShare",
      "referralShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referralShareVotes(user: Address): BigInt {
    let result = super.call(
      "referralShareVotes",
      "referralShareVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_referralShareVotes(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralShareVotes",
      "referralShareVotes(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  shareParameters(): MooniswapFactory__shareParametersResult {
    let result = super.call(
      "shareParameters",
      "shareParameters():(uint256,uint256,address,address)",
      []
    );

    return new MooniswapFactory__shareParametersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toAddress()
    );
  }

  try_shareParameters(): ethereum.CallResult<
    MooniswapFactory__shareParametersResult
  > {
    let result = super.tryCall(
      "shareParameters",
      "shareParameters():(uint256,uint256,address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__shareParametersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toAddress()
      )
    );
  }

  sortTokens(
    tokenA: Address,
    tokenB: Address
  ): MooniswapFactory__sortTokensResult {
    let result = super.call(
      "sortTokens",
      "sortTokens(address,address):(address,address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );

    return new MooniswapFactory__sortTokensResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_sortTokens(
    tokenA: Address,
    tokenB: Address
  ): ethereum.CallResult<MooniswapFactory__sortTokensResult> {
    let result = super.tryCall(
      "sortTokens",
      "sortTokens(address,address):(address,address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__sortTokensResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  virtualDefaultDecayPeriod(): MooniswapFactory__virtualDefaultDecayPeriodResult {
    let result = super.call(
      "virtualDefaultDecayPeriod",
      "virtualDefaultDecayPeriod():(uint104,uint104,uint48)",
      []
    );

    return new MooniswapFactory__virtualDefaultDecayPeriodResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_virtualDefaultDecayPeriod(): ethereum.CallResult<
    MooniswapFactory__virtualDefaultDecayPeriodResult
  > {
    let result = super.tryCall(
      "virtualDefaultDecayPeriod",
      "virtualDefaultDecayPeriod():(uint104,uint104,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__virtualDefaultDecayPeriodResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  virtualDefaultFee(): MooniswapFactory__virtualDefaultFeeResult {
    let result = super.call(
      "virtualDefaultFee",
      "virtualDefaultFee():(uint104,uint104,uint48)",
      []
    );

    return new MooniswapFactory__virtualDefaultFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_virtualDefaultFee(): ethereum.CallResult<
    MooniswapFactory__virtualDefaultFeeResult
  > {
    let result = super.tryCall(
      "virtualDefaultFee",
      "virtualDefaultFee():(uint104,uint104,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__virtualDefaultFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  virtualDefaultSlippageFee(): MooniswapFactory__virtualDefaultSlippageFeeResult {
    let result = super.call(
      "virtualDefaultSlippageFee",
      "virtualDefaultSlippageFee():(uint104,uint104,uint48)",
      []
    );

    return new MooniswapFactory__virtualDefaultSlippageFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_virtualDefaultSlippageFee(): ethereum.CallResult<
    MooniswapFactory__virtualDefaultSlippageFeeResult
  > {
    let result = super.tryCall(
      "virtualDefaultSlippageFee",
      "virtualDefaultSlippageFee():(uint104,uint104,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__virtualDefaultSlippageFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  virtualGovernanceShare(): MooniswapFactory__virtualGovernanceShareResult {
    let result = super.call(
      "virtualGovernanceShare",
      "virtualGovernanceShare():(uint104,uint104,uint48)",
      []
    );

    return new MooniswapFactory__virtualGovernanceShareResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_virtualGovernanceShare(): ethereum.CallResult<
    MooniswapFactory__virtualGovernanceShareResult
  > {
    let result = super.tryCall(
      "virtualGovernanceShare",
      "virtualGovernanceShare():(uint104,uint104,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__virtualGovernanceShareResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  virtualReferralShare(): MooniswapFactory__virtualReferralShareResult {
    let result = super.call(
      "virtualReferralShare",
      "virtualReferralShare():(uint104,uint104,uint48)",
      []
    );

    return new MooniswapFactory__virtualReferralShareResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_virtualReferralShare(): ethereum.CallResult<
    MooniswapFactory__virtualReferralShareResult
  > {
    let result = super.tryCall(
      "virtualReferralShare",
      "virtualReferralShare():(uint104,uint104,uint48)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MooniswapFactory__virtualReferralShareResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _poolOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _mooniswapDeployer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _governanceMothership(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultDecayPeriodVoteCall extends ethereum.Call {
  get inputs(): DefaultDecayPeriodVoteCall__Inputs {
    return new DefaultDecayPeriodVoteCall__Inputs(this);
  }

  get outputs(): DefaultDecayPeriodVoteCall__Outputs {
    return new DefaultDecayPeriodVoteCall__Outputs(this);
  }
}

export class DefaultDecayPeriodVoteCall__Inputs {
  _call: DefaultDecayPeriodVoteCall;

  constructor(call: DefaultDecayPeriodVoteCall) {
    this._call = call;
  }

  get vote(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DefaultDecayPeriodVoteCall__Outputs {
  _call: DefaultDecayPeriodVoteCall;

  constructor(call: DefaultDecayPeriodVoteCall) {
    this._call = call;
  }
}

export class DefaultFeeVoteCall extends ethereum.Call {
  get inputs(): DefaultFeeVoteCall__Inputs {
    return new DefaultFeeVoteCall__Inputs(this);
  }

  get outputs(): DefaultFeeVoteCall__Outputs {
    return new DefaultFeeVoteCall__Outputs(this);
  }
}

export class DefaultFeeVoteCall__Inputs {
  _call: DefaultFeeVoteCall;

  constructor(call: DefaultFeeVoteCall) {
    this._call = call;
  }

  get vote(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DefaultFeeVoteCall__Outputs {
  _call: DefaultFeeVoteCall;

  constructor(call: DefaultFeeVoteCall) {
    this._call = call;
  }
}

export class DefaultSlippageFeeVoteCall extends ethereum.Call {
  get inputs(): DefaultSlippageFeeVoteCall__Inputs {
    return new DefaultSlippageFeeVoteCall__Inputs(this);
  }

  get outputs(): DefaultSlippageFeeVoteCall__Outputs {
    return new DefaultSlippageFeeVoteCall__Outputs(this);
  }
}

export class DefaultSlippageFeeVoteCall__Inputs {
  _call: DefaultSlippageFeeVoteCall;

  constructor(call: DefaultSlippageFeeVoteCall) {
    this._call = call;
  }

  get vote(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DefaultSlippageFeeVoteCall__Outputs {
  _call: DefaultSlippageFeeVoteCall;

  constructor(call: DefaultSlippageFeeVoteCall) {
    this._call = call;
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DiscardDefaultDecayPeriodVoteCall extends ethereum.Call {
  get inputs(): DiscardDefaultDecayPeriodVoteCall__Inputs {
    return new DiscardDefaultDecayPeriodVoteCall__Inputs(this);
  }

  get outputs(): DiscardDefaultDecayPeriodVoteCall__Outputs {
    return new DiscardDefaultDecayPeriodVoteCall__Outputs(this);
  }
}

export class DiscardDefaultDecayPeriodVoteCall__Inputs {
  _call: DiscardDefaultDecayPeriodVoteCall;

  constructor(call: DiscardDefaultDecayPeriodVoteCall) {
    this._call = call;
  }
}

export class DiscardDefaultDecayPeriodVoteCall__Outputs {
  _call: DiscardDefaultDecayPeriodVoteCall;

  constructor(call: DiscardDefaultDecayPeriodVoteCall) {
    this._call = call;
  }
}

export class DiscardDefaultFeeVoteCall extends ethereum.Call {
  get inputs(): DiscardDefaultFeeVoteCall__Inputs {
    return new DiscardDefaultFeeVoteCall__Inputs(this);
  }

  get outputs(): DiscardDefaultFeeVoteCall__Outputs {
    return new DiscardDefaultFeeVoteCall__Outputs(this);
  }
}

export class DiscardDefaultFeeVoteCall__Inputs {
  _call: DiscardDefaultFeeVoteCall;

  constructor(call: DiscardDefaultFeeVoteCall) {
    this._call = call;
  }
}

export class DiscardDefaultFeeVoteCall__Outputs {
  _call: DiscardDefaultFeeVoteCall;

  constructor(call: DiscardDefaultFeeVoteCall) {
    this._call = call;
  }
}

export class DiscardDefaultSlippageFeeVoteCall extends ethereum.Call {
  get inputs(): DiscardDefaultSlippageFeeVoteCall__Inputs {
    return new DiscardDefaultSlippageFeeVoteCall__Inputs(this);
  }

  get outputs(): DiscardDefaultSlippageFeeVoteCall__Outputs {
    return new DiscardDefaultSlippageFeeVoteCall__Outputs(this);
  }
}

export class DiscardDefaultSlippageFeeVoteCall__Inputs {
  _call: DiscardDefaultSlippageFeeVoteCall;

  constructor(call: DiscardDefaultSlippageFeeVoteCall) {
    this._call = call;
  }
}

export class DiscardDefaultSlippageFeeVoteCall__Outputs {
  _call: DiscardDefaultSlippageFeeVoteCall;

  constructor(call: DiscardDefaultSlippageFeeVoteCall) {
    this._call = call;
  }
}

export class DiscardGovernanceShareVoteCall extends ethereum.Call {
  get inputs(): DiscardGovernanceShareVoteCall__Inputs {
    return new DiscardGovernanceShareVoteCall__Inputs(this);
  }

  get outputs(): DiscardGovernanceShareVoteCall__Outputs {
    return new DiscardGovernanceShareVoteCall__Outputs(this);
  }
}

export class DiscardGovernanceShareVoteCall__Inputs {
  _call: DiscardGovernanceShareVoteCall;

  constructor(call: DiscardGovernanceShareVoteCall) {
    this._call = call;
  }
}

export class DiscardGovernanceShareVoteCall__Outputs {
  _call: DiscardGovernanceShareVoteCall;

  constructor(call: DiscardGovernanceShareVoteCall) {
    this._call = call;
  }
}

export class DiscardReferralShareVoteCall extends ethereum.Call {
  get inputs(): DiscardReferralShareVoteCall__Inputs {
    return new DiscardReferralShareVoteCall__Inputs(this);
  }

  get outputs(): DiscardReferralShareVoteCall__Outputs {
    return new DiscardReferralShareVoteCall__Outputs(this);
  }
}

export class DiscardReferralShareVoteCall__Inputs {
  _call: DiscardReferralShareVoteCall;

  constructor(call: DiscardReferralShareVoteCall) {
    this._call = call;
  }
}

export class DiscardReferralShareVoteCall__Outputs {
  _call: DiscardReferralShareVoteCall;

  constructor(call: DiscardReferralShareVoteCall) {
    this._call = call;
  }
}

export class GovernanceShareVoteCall extends ethereum.Call {
  get inputs(): GovernanceShareVoteCall__Inputs {
    return new GovernanceShareVoteCall__Inputs(this);
  }

  get outputs(): GovernanceShareVoteCall__Outputs {
    return new GovernanceShareVoteCall__Outputs(this);
  }
}

export class GovernanceShareVoteCall__Inputs {
  _call: GovernanceShareVoteCall;

  constructor(call: GovernanceShareVoteCall) {
    this._call = call;
  }

  get vote(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GovernanceShareVoteCall__Outputs {
  _call: GovernanceShareVoteCall;

  constructor(call: GovernanceShareVoteCall) {
    this._call = call;
  }
}

export class NotifyStakeChangedCall extends ethereum.Call {
  get inputs(): NotifyStakeChangedCall__Inputs {
    return new NotifyStakeChangedCall__Inputs(this);
  }

  get outputs(): NotifyStakeChangedCall__Outputs {
    return new NotifyStakeChangedCall__Outputs(this);
  }
}

export class NotifyStakeChangedCall__Inputs {
  _call: NotifyStakeChangedCall;

  constructor(call: NotifyStakeChangedCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newBalance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class NotifyStakeChangedCall__Outputs {
  _call: NotifyStakeChangedCall;

  constructor(call: NotifyStakeChangedCall) {
    this._call = call;
  }
}

export class NotifyStakesChangedCall extends ethereum.Call {
  get inputs(): NotifyStakesChangedCall__Inputs {
    return new NotifyStakesChangedCall__Inputs(this);
  }

  get outputs(): NotifyStakesChangedCall__Outputs {
    return new NotifyStakesChangedCall__Outputs(this);
  }
}

export class NotifyStakesChangedCall__Inputs {
  _call: NotifyStakesChangedCall;

  constructor(call: NotifyStakesChangedCall) {
    this._call = call;
  }

  get accounts(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get newBalances(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class NotifyStakesChangedCall__Outputs {
  _call: NotifyStakesChangedCall;

  constructor(call: NotifyStakesChangedCall) {
    this._call = call;
  }
}

export class ReferralShareVoteCall extends ethereum.Call {
  get inputs(): ReferralShareVoteCall__Inputs {
    return new ReferralShareVoteCall__Inputs(this);
  }

  get outputs(): ReferralShareVoteCall__Outputs {
    return new ReferralShareVoteCall__Outputs(this);
  }
}

export class ReferralShareVoteCall__Inputs {
  _call: ReferralShareVoteCall;

  constructor(call: ReferralShareVoteCall) {
    this._call = call;
  }

  get vote(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReferralShareVoteCall__Outputs {
  _call: ReferralShareVoteCall;

  constructor(call: ReferralShareVoteCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetGovernanceFeeReceiverCall extends ethereum.Call {
  get inputs(): SetGovernanceFeeReceiverCall__Inputs {
    return new SetGovernanceFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetGovernanceFeeReceiverCall__Outputs {
    return new SetGovernanceFeeReceiverCall__Outputs(this);
  }
}

export class SetGovernanceFeeReceiverCall__Inputs {
  _call: SetGovernanceFeeReceiverCall;

  constructor(call: SetGovernanceFeeReceiverCall) {
    this._call = call;
  }

  get newGovernanceFeeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceFeeReceiverCall__Outputs {
  _call: SetGovernanceFeeReceiverCall;

  constructor(call: SetGovernanceFeeReceiverCall) {
    this._call = call;
  }
}

export class SetReferralFeeReceiverCall extends ethereum.Call {
  get inputs(): SetReferralFeeReceiverCall__Inputs {
    return new SetReferralFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetReferralFeeReceiverCall__Outputs {
    return new SetReferralFeeReceiverCall__Outputs(this);
  }
}

export class SetReferralFeeReceiverCall__Inputs {
  _call: SetReferralFeeReceiverCall;

  constructor(call: SetReferralFeeReceiverCall) {
    this._call = call;
  }

  get newReferralFeeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReferralFeeReceiverCall__Outputs {
  _call: SetReferralFeeReceiverCall;

  constructor(call: SetReferralFeeReceiverCall) {
    this._call = call;
  }
}

export class ShutdownCall extends ethereum.Call {
  get inputs(): ShutdownCall__Inputs {
    return new ShutdownCall__Inputs(this);
  }

  get outputs(): ShutdownCall__Outputs {
    return new ShutdownCall__Outputs(this);
  }
}

export class ShutdownCall__Inputs {
  _call: ShutdownCall;

  constructor(call: ShutdownCall) {
    this._call = call;
  }
}

export class ShutdownCall__Outputs {
  _call: ShutdownCall;

  constructor(call: ShutdownCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
